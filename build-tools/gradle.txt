بیلد برنامه های Gradle-based در خط فرمان(CLI):

۱- استفاده از برنامه نصبی gradle و اجرای دصتور $gradle build در پوشه پروژه های Gradle
۲- استفاده از اسکریپت ./gradlew build در خط فرمان

نکته ها: 

- استفاده از روش gradlew حتی اگر روی سیستم مربوطه نسخه ای از Gradle نصب نشده باشد باعث دانلود اتوماتیک یک نسخه از Gradle و استفاده از آن در فرایند بیلد بصورت اتوماتیک می شود.

- در صورتی که در سیستم عامل ویندوز دستور اجرای shell script را می خواهیم اجرا کنیم از نسخه .bat آن پروژه استفاده می کنیم.

- در صورتی در سیستم عامل Unix-based خطای اجرای فرمان ./gradle بصورت Permission Deined دریافت می شود باید قبل از اجرای اسکریپت با دستور $ chmod +x gradlew اجازه اجرای فایل اسکریپت بیلد پروژه را روی سیستم مربوطه داد.

- در صورتی که در فرایند بیلد خطای عدم دسترسی به فایل های خاصی از Dependency های پروژه روی سرورها صادر می شود می توان با اجرای دستور $ ./gradlew -‪-‬debug متوجه شد که دقیقا روی کدام کتابخانه و با خطای کدام سرور مواجه هستیم. اغلب این موضوع به دلیل تحریم IP های ایران توسط Repository Manager های مانند Google مثلا برای Dependency های پروژه های وابسته به گوگل مثلا آدرس های developer.google.com می باشد که در چنین شرایطی با باز کردن VPN های غیر ایرانی می توان موضوع را مرتفع کرد یا در ساختارهای سازمانی به دنبال راه اندازی Repository های داخلی شرکت بود. ابزارهای مانند JFrog که می توانند سرورهای داخلی Repository باشند.

۳- بعد از بیلد پروژه با مراجعه به پوشه build ایجاد شده در کنار فایل های build‪.‬gradle می توان در صورتی که خروجی پروژه بصورت یک executable JAR باشد آن را با دستور $ gradle run اجرا نمود.


در خصوص استفاده از دستور gradle به جای gradlew دقیقا فرایند مشابه است به جز اینکه باید قبل از اجرای این دستور از نسخه نصب شده Gradle در لیست Environment Variable ها اطمینان حاصل کرد. مثلا با دستور gradle -v می توانیم اطمینان حاصل کنیم که روی سیستم عامل ما یک نسخه از Gradle قابل دسترس باشد. در غیر این صورت باید یک نسخه از آن را دانلود و در مسیری از سیستم unzip و با دستور export در لیست Environment Variable ها قرار داد.


تکته مهم:

در صورتی که پروژه Maven داریم و می خواهیم ساختار بیلد را به Gradle مهاجرت دهیم کافی است در مسیر پروژه دستور زیر را اجرا کرده تا اقدام به شناسایی فایل POM‪.‬xml پروژه نماید و فایل build‪.‬gradle. را برای ما ایجاد کند:

‏‪$‬ gradle init

دستور باید را در صورتی که در پروژه ی ما نسخه ای قبلی از Maven وجود ندارد یکسری سوال در خصوص نام پکیج و لیست Dependency ها و زبان syntax فایل Gradle‪(‬Groovy‪,‬ Kotlin‪)‬ و نوع پروژه Java Application و موارد دیگری پرسیده خواهد شد.

ابزار Build Gradle دارای تسک های مجزایی برای اهداف متفاوت می باشد که با اجرای دستور ‪$‬ gradle tasks می توانیم لیست آنها را مشاهده کنیم. یا با دستور ‪$‬ gradle projects لیست زیر پروژه های مسیر Gradle جاری را مشاهده کنیم.

بعد از بیلد پروژه با استفاده از ابزار Gradle در صورتی که دستور ایجاد یک JAR از پروژه را نیز مشخص کرده باشیم در مسیر build خروجی پوشه ای با نام libs شامل یک فایل JAR به همراه تمام Dependency های پروژه بصورت بصورت یک فایل مجتمع ایجاد خواهد شد.

در صورتی که بخواهیم یک فایل Main برای پروژه های Gradle در فایل JAR نهایی و Artifact پروژه مشخص کنیم باید پلاگین application و ویژگی mainClassName‪=[‬Main‪_‬Class‪_‬Package‪_‬Path‪]‬ تعیین کنیم. همچنین به جای این موضوع می توانیم از دستور ‪$‬ gradle run برای اجرای برنامه JAR اجرای نیز استفاده کنیم.





